----------------------------------------------------------------------------------------------------
----------      File        :   ion_guide.pa+                                             ----------
----------      Author      :   X. Chen                                                   ----------
----------      Description :   linear combination of electrodes in "ion_guide.gem"       ----------
----------      License     :   GNU GPLv3                                                 ----------
----------------------------------------------------------------------------------------------------

local IG                    =   _G.shared_table

local ring_focus_number     =   IG.ring_focus_number
local ring_big_number       =   IG.ring_big_number
local ring_taper_number     =   IG.ring_taper_number
local ring_small_number     =   IG.ring_small_number

local ring_focus_pa_num     =   IG.ring_focus_pa_num
local ring_big_pa_num       =   IG.ring_big_pa_num
local ring_small_pa_num     =   IG.ring_small_pa_num
local cap_pa_num            =   IG.cap_pa_num
local tube_pa_num           =   IG.tube_pa_num
local pipe_pa_num           =   IG.pipe_pa_num

local confine_rf_pa_num     =   IG.confine_rf_pa_num
local travel_wave_pa_num    =   IG.travel_wave_pa_num
local travel_wave_length    =   IG.travel_wave_length
local threshold_pa_num      =   IG.threshold_pa_num
local eject_pa_num          =   IG.eject_pa_num
local pulsed_tube_pa_num    =   IG.pulsed_tube_pa_num
local ground_pa_num         =   IG.ground_pa_num

local confine_rf_number     =   ring_focus_number + ring_big_number + ring_taper_number + ring_small_number
local travel_wave_number    =   ring_big_number + ring_taper_number

-- electrode mapping table
local electrocombo = {}

-- stacked rings
local confine_rf = {}
for i = 0, confine_rf_number - 1 do
    confine_rf[ring_focus_pa_num + i] = (i%2 == 0) and 1 or -1
end
electrocombo[confine_rf_pa_num] = confine_rf

for i = 0, travel_wave_length - 1 do
    local travel_wave = {}
    for j = i, travel_wave_number - 1, travel_wave_length do
        travel_wave[ring_big_pa_num + j] = 1
    end
    electrocombo[travel_wave_pa_num + i] = travel_wave
end

electrocombo[threshold_pa_num] = { [ring_big_pa_num - 1] = 1 }

for i = 0, ring_small_number - 1 do
    electrocombo[eject_pa_num + i] = { [ring_small_pa_num + i] = 1 }
end

electrocombo[pulsed_tube_pa_num] = { [tube_pa_num] = 1 }

-- caps and vacuum pipe
electrocombo[ground_pa_num] = {
    [cap_pa_num]        =   1;
    [cap_pa_num + 1]    =   1;
    [pipe_pa_num]       =   1;
}

potential_array { scalable_electrodes = electrocombo }
